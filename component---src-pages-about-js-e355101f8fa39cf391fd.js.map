{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["AboutPage","_ref","location","siteTitle","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","keywords","className","__webpack_exports__","props","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","Object","assign","_public_static_d_21076074_json__WEBPACK_IMPORTED_MODULE_1__","m","module","exports","require","default","__webpack_require__","d","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","gatsby__WEBPACK_IMPORTED_MODULE_1__","Layout","_React$useState","useState","toggleNav","setToggleNav","href","onClick","aria-label","role","aria-controls","id","class","to","target","rel","Date","getFullYear","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf"],"mappings":"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","file":"component---src-pages-about-js-e355101f8fa39cf391fd.js","sourcesContent":["import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n// import Img from \"gatsby-image\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\n\nconst AboutPage = ({ data }, location) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout title={siteTitle}>\n      <SEO title=\"About\" keywords={[`blog`, `gatsby`, `javascript`, `react`]} />\n\n      <article className=\"post-content page-template no-image\">\n        <div className=\"post-content-body\">\n          }<h3>Hello! ðŸ‘‹</h3>\n          <p>...</p>\n        </div>\n      </article>\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    # benchAccounting: file(\n    #   relativePath: { eq: \"x.jpg\" }\n    # ) {\n    #   childImageSharp {\n    #     fluid(maxWidth: 1360) {\n    #       ...GatsbyImageSharpFluid\n    #     }\n    #   }\n    # }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <AboutPage location={props.location} data={data} {...props} />\n    )}\n  />\n)\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = props => {\n  const { title, children } = props\n  const [toggleNav, setToggleNav] = React.useState(false)\n  return (\n    <div className={`site-wrapper ${toggleNav ? `site-head-open` : ``}`}>\n      <header className=\"site-head\">\n        <div className=\"site-head-container\">\n          <a\n            className=\"nav-burger\"\n            href={`#`}\n            onClick={() => setToggleNav(!toggleNav)}\n          >\n            <div\n              className=\"hamburger hamburger--collapse\"\n              aria-label=\"Menu\"\n              role=\"button\"\n              aria-controls=\"navigation\"\n            >\n              <div className=\"hamburger-box\">\n                <div className=\"hamburger-inner\" />\n              </div>\n            </div>\n          </a>\n          <nav id=\"swup\" class=\"site-head-left\">\n            <ul className=\"nav\" role=\"menu\">\n              <li className=\"nav-home nav-current\" role=\"menuitem\">\n                <Link to={`/`}>Home</Link>\n              </li>\n              {/* <li className=\"nav-about\" role=\"menuitem\"> */}\n              {/* <Link to={`/about`}>About</Link> */}\n              {/* </li> */}\n            </ul>\n          </nav>\n          <div className=\"site-head-center\">\n            <Link className=\"site-head-logo\" to={`/`}>\n              {title}\n            </Link>\n          </div>\n          <div className=\"site-head-right\">\n            <div className=\"social-links\">\n              <a\n                href=\"https://www.github.com/spen\"\n                title=\"Github\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Github\n              </a>\n            </div>\n          </div>\n        </div>\n      </header>\n      <main id=\"site-main\" className=\"site-main\">\n        <div id=\"swup\" className=\"transition-fade\">\n          {children}\n        </div>\n      </main>\n      <footer className=\"site-foot\">\n        &copy; {new Date().getFullYear()} <Link to={`/`}>{title}</Link> &mdash;\n        Built with{\" \"}\n        <a\n          href=\"https://gatsbyjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Gatsby\n        </a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}